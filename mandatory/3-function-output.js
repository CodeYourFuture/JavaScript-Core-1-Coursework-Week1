// Add comments to explain what this function does. You're meant to use Google!
function getRandomNumber() {
  return Math.random() * 10;
}
// First attempt WITHOUT using Google (i.e. already acquired knowledge)
// OK. Cheating! I already used Google (to make sure that "acuired" means what I meant it to mean!)
// So, Math.random() creates a (pseudo*) random number between 0 and 1 (so most likely the number is a decimal, a "float")
// Then this number is multiplied by 10, so the function returns another (most likely) decimal number between 0 and 10.

// *pseudo I understand *pseudo(random) as something that is not really random. e.g. it could be a number generated based on the time / clock of the CPU (I hope what I type makes sense)
// And now let me use Google... > https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random
// Roughly what I typed was correct apart from the fact that 1 will never be generated by the Math.round function (it's 0 inclusive, 1 exclusive).
// Thus the above function (getRandomNumber()) will never return 10.


// Add comments to explain what this function does. You're meant to use Google!
function combine2Words(word1, word2) {
  return word1.concat(word2);
}
// concat() method concatenates / joins two or more strings - So the above function (combine2Words) joins the two parameteters (strings) it is given.
// Source [ https://www.w3schools.com/jsref/jsref_concat_string.asp ]

function concatenate(firstWord, secondWord, thirdWord) {
  // Write the body of this function to concatenate three words together.
  // Look at the test case below to understand what this function is expected to return.
  return firstWord.concat(" ", secondWord, " ", thirdWord);
}

/* 
===================================================
======= TESTS - DO NOT MODIFY BELOW THIS LINE =====

There are some Tests in this file that will help you work out if your code is working.

To run the tests for just this one file, type `npm test -- --testPathPattern 3-function-output` into your terminal
(Reminder: You must have run `npm install` one time before this will work!)
==================================
*/

test("concatenate example #1", () => {
  expect(concatenate("code", "your", "future")).toEqual("code your future");
});

test("concatenate example #2", () => {
  expect(concatenate("I", "like", "pizza")).toEqual("I like pizza");
});

test("concatenate doesn't only accept strings", () => {
  expect(concatenate("I", "am", 13)).toEqual("I am 13");
});
